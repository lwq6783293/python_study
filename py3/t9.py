#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2018/1/19 17:17
# @Author  : Weiqiang.long
# @Site    : 
# @File    : t9.py
# @Software: PyCharm

# TODO 切片
# 取一个list或tuple的部分元素是非常常见的操作。比如，一个lsit如下：
L = ['Michael','Sarah','Tracy','Bob','Jack']

# 要求：取前3个元素

# 笨办法
print([L[0],L[1],L[2]])

# 取前 N 个元素，也就是索引为 0-(N-1)的元素，可以用循环
r = []
n = 3
for i in range(n):
    r.append(L[i])
print(r)

print('------------------------------------------------------------------------')

# 利用切片来写
'''
对这种经常取指定索引范围的操作，用循环十分繁琐，因此， Python 提
供了切片（Slice）操作符，能大大简化这种操作
'''
# 对应上面的问题，取前3个元素，用一行代码就可以完成切片
# L[0:3]表示，从索引0开始取，直到索引3为止，但不包括索引3。即索引0，1，2,正好是3个元素
print(L[0:3])

# 如果第一个索引是0，还可以省略
print(L[:3])

# 也可以从索引1开始，取出2个元素出来
print(L[1:3])

print('------------------------------------------------------------------------')

# 倒数切片
# 注意：倒数第一个元素的索引是-1
print(L[-2:])
print(L[-2:-1])

print('------------------------------------------------------------------------')

# 创建一个0-99的数列
L = list(range(100))
print(L)

# 通过切片取出某一段数列，如前十个数
print(L[:10])

# 取出后十个数
print(L[-10:])

# 前11-20个数
print(L[10:20])

# 前十个数，每两个取一个
print(L[:10:2])

# 所有数，每5个取一个
print(L[::5])

# 甚至什么都不写，只写[:]就可以原样复制一个list
print(L[:])

print('------------------------------------------------------------------------')

'''
tuple 也是一种 list，唯一区别是 tuple 不可变。因此， tuple 也可以用切
片操作，只是操作的结果仍是 tuple
'''
T = tuple(range(10))
print(T)

print(T[:3])

print('------------------------------------------------------------------------')

# 字符串‘XXX’也可以看成是一种list，每个元素就是一个字符，因此字符串也可以用切片操作，只是操作结果仍是字符串
S = 'ABCDEFG'
print(S)

# 打印前三个
print(S[:3])

# 每两个取一个字母打印
print(S[::2])









